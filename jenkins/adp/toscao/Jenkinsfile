#!/usr/bin/env groovy

@Library('jenkins-shared-libs')
import static com.ericsson.orchestration.mgmt.libs.VnfmArtifact.getArtifactList
import static com.ericsson.orchestration.mgmt.libs.VnfmJenkins.getAgentLabel
import static com.ericsson.orchestration.mgmt.libs.VnfmJenkins.getSeedJobName


// Stages template
def stages = [:]
// Set Agent label
String label = getAgentLabel( type: 'concurrent',
                              this)


node(label) {
    try {
        // Set Job's ENVs
        env.SEED_JOB = getSeedJobName(JOB_NAME)
        env.JOB_TYPE = 'release'
        env.GLOBAL_VAR_PATH = 'jenkins/global.var'
        env.VAR_PATH = 'jenkins/' + env.SEED_JOB + '/project.var'
        env.CHART_NAME = 'toscao'


        // Run Prepare Stage
        stage('Prepare') {
            println('INFO: Checkout CI code...')
            checkout(scm)

            println('INFO: Load Global vars...')
            load(env.GLOBAL_VAR_PATH)

            println('INFO: Load Project vars...')
            load(env.VAR_PATH)

            println('INFO: Load Stages...')
            stages['run-job'] = load(env.RUN_JOB_STAGE)

            println('INFO: Get Toscao Chart version...')
            String artName = getArtifactList( repository: env.TOSCAO_REPOSITORY,
                                              path: env.TOSCAO_PATH,
                                              url: env.TOSCAO_URL,
                                              this).first()
            env.CHART_VERSION = artName.minus('toscao-')
                                        .minus('.tgz')
            addShortText(text: env.CHART_VERSION)
        }

        // Run Uplift Child Chart Job
        ArrayList upliftJobParams = []
        upliftJobParams.add(name: 'CHART_NAME',
                            value: env.CHART_NAME)
        upliftJobParams.add(name: 'CHART_VERSION',
                            value: env.CHART_VERSION)
        upliftJobParams.add(name: 'UMBRELLA_PROJECT_NAME',
                            value: env.OFOC_GERRIT_PROJECT)
        upliftJobParams.add(name: 'UMBRELLA_PROJECT_BRANCH',
                            value: env.OFOC_GERRIT_BRANCH)
        upliftJobParams.add(name: 'UMBRELLA_CHART_FILE',
                            value: env.OFOC_CHART_FILE_PATH)
        stages['run-job'].LocalJob( name: env.UPLIFT_CHILD_CHART_JOB ,
                                    params: upliftJobParams)

   } catch (Exception errJob) {
       println(errJob)
       currentBuild.result = 'FAILURE'
   } finally {
       // Clean workspace
       cleanWs()
   }
}