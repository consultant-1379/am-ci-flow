#!/usr/bin/env groovy

@Library('jenkins-shared-libs')
import static com.ericsson.orchestration.mgmt.libs.VnfmJenkins.getAgentLabel
import static com.ericsson.orchestration.mgmt.libs.VnfmJenkins.getSeedJobName


// Stages template
def stages = [:]
// Label of the runner
String label = getAgentLabel( type: 'gerrit',
                              this)


node(label) {
    try {
        // Set Job's ENVs
        env.SEED_JOB = getSeedJobName(JOB_NAME)
        env.SHORT_JOB_NAME = JOB_NAME.minus(env.SEED_JOB + '_')
        env.JOB_TYPE = 'ha-tests'
        env.GLOBAL_VAR_PATH = 'jenkins/global.var'
        env.VAR_PATH = 'jenkins/evnfm-test/project.var'
        env.GERRIT_PROJECT = 'eocm-app-robustness'
        env.ALLURE_DIR = 'allure_results'
        env.CLUSTER = params.CLUSTER
        env.NAMESPACE = params.NAMESPACE
        env.HOSTNAME = params.HOSTNAME
        env.PATH_TO_TEST = params.PATH_TO_TEST
        env.GERRIT_BRANCH = params.GERRIT_BRANCH
        env.GERRIT_REFSPEC = params.GERRIT_REFSPEC


        // Run Prepare Stage
        stage('Prepare') {
            println('INFO: Checkout CI code...')
            checkout(scm)

            println('INFO: Load Global vars...')
            load(env.GLOBAL_VAR_PATH)

            println('INFO: Load Project vars...')
            load(env.VAR_PATH)

            println('INFO: Load Stages...')
            stages['git'] = load(env.GIT_STAGE)
            stages['ua-tests'] = load(env.UA_TESTS_STAGE)
            stages['post'] = load(env.POST_STAGE)
            stages['clean'] = load(env.CLEAN_STAGE)
        }

        // Run Checkout Project Stage
        stages['git'].CheckoutProject(project: env.GERRIT_PROJECT,
                                      branch: env.GERRIT_BRANCH,
                                      refspec: env.GERRIT_REFSPEC,
                                      type: 'change')

        // Run HA Robustness Tests Stage
        stages['ua-tests'].RobustnessTests( project: env.GERRIT_PROJECT,
                                            host: env.HOSTNAME,
                                            path: env.PATH_TO_TEST)

    } catch (Exception errJob) {
        println(errJob)
        currentBuild.result = 'FAILURE'
    } finally {
        // Run Post Actions Stage
        stages['post'].ServiceJob(name: env.SHORT_JOB_NAME)

        // Run Clean Stage
        stages['clean'].CleanBuild()
    }
}